How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    두 파일 중 다른 곳을 보여주기 때문에 쉽게 달라진 부분 중에서 typo가 어디 있는지 찾을 수 있었다.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    어떤 시점에 어떤 프로그래밍을 했는지 모두 파일로 기록되기 때문에 복원도 쉽고 피드백을 쉽게 할 수 있어 좋다.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    자동으로 한다면 많은 자원소모가 필요하게 되어 좋지 않을 것이며 수동으로 하면 사용자가 실수로 commit을 하지 않을        
    경우 좋지 않을 것이다.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    크기가 크고 여러개의 파일들이 서로 유기적으로 동작해야하는 프로젝트를 하게 되는 경우는 당연히 multiple file을 tracking하여 연관된 파일들이 어떻게 변하였는지 알 수 있도록 하도록 지원하여야 한다.

How can you use the commands git log and git diff to view the history of files?

    git log 를 사용하여 commit된 history를 파악한 후 git diff를 통해 시간의 흐름에서 있었던 변화를 비교하여 이해할 수 있다.

How might using version control make you more confident to make changes that
could break something?

    복원 시점이 다 정해져 있으므로 자유롭게 걱정없이 수정할 수 있다. 

Now that you have your workspace set up, what do you want to try using Git for?

    안드로이드 앱 개발에 사용하고자 한다.
